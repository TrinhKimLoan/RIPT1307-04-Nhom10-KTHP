import emailjs from '@emailjs/browser';
import { EMAIL_CONFIG } from '../../config/emailEnv';
import type { Post } from './Posts/typings.d';
import type { User } from './Users/typings.d';

/**
 * G·ª≠i email th√¥ng b√°o khi c√≥ b√¨nh lu·∫≠n m·ªõi tr√™n b√†i vi·∫øt.
 * Ch·ªâ g·ªçi n·∫øu post.notifyOnNewComment === true
 */
export const sendEmailOnNewComment = (post: Post, user: User) => {
  if (!user.email || !user.fullName) return;
  console.log('[ EmailJS] S·ªë ng∆∞·ªùi s·∫Ω nh·∫≠n email b√†i ƒëƒÉng m·ªõi:', user.email);
  emailjs
    .send(
      EMAIL_CONFIG.SERVICE_ID,
      EMAIL_CONFIG.TEMPLATE_ID,
      {
        to_email: user.email,
        to_name: user.fullName,
        subject: 'B√†i vi·∫øt c·ªßa b·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c b√¨nh lu·∫≠n m·ªõi!',
        message: `B√†i vi·∫øt "${post.title}" b·∫°n ƒë√£ ƒëƒÉng v·ª´a nh·∫≠n ƒë∆∞·ª£c m·ªôt b√¨nh lu·∫≠n m·ªõi. Vui l√≤ng truy c·∫≠p ƒë·ªÉ xem chi ti·∫øt.`,
      },
      EMAIL_CONFIG.PUBLIC_KEY
    )
    .then(
      () => console.log(`üì© G·ª≠i email b√¨nh lu·∫≠n ƒë·∫øn ${user.email} th√†nh c√¥ng`),
      (err) => console.error('‚ùå G·ª≠i email th·∫•t b·∫°i:', err)
    );
};

/**
 * G·ª≠i email ƒë·∫øn nh·ªØng ng∆∞·ªùi d√πng ƒë√£ ch·ªçn nh·∫≠n th√¥ng b√°o khi c√≥ b√†i vi·∫øt m·ªõi
 * v√† c√≥ tag y√™u th√≠ch tr√πng v·ªõi tag trong b√†i ƒëƒÉng
 */
export const sendEmailOnNewPost = (post: Post, users: User[]) => {
  const recipients = users.filter(
    (u) =>
      u.notifyOnNewPost &&
      u.email &&
      u.favouriteTags &&
      u.favouriteTags.some((tagId) => post.tagIds.includes(tagId))
  );

  recipients.forEach((user) => {
    emailjs
      .send(
        EMAIL_CONFIG.SERVICE_ID,
        EMAIL_CONFIG.TEMPLATE_ID,
        {
          to_email: user.email,
          to_name: user.fullName,
          subject: 'B√†i vi·∫øt m·ªõi li√™n quan ƒë·∫øn ch·ªß ƒë·ªÅ b·∫°n theo d√µi',
          message: `M·ªôt b√†i vi·∫øt m·ªõi c√≥ ti√™u ƒë·ªÅ "${post.title}" v·ª´a ƒë∆∞·ª£c ƒëƒÉng, li√™n quan ƒë·∫øn c√°c ch·ªß ƒë·ªÅ b·∫°n quan t√¢m.`,
        },
        EMAIL_CONFIG.PUBLIC_KEY
      )
      .then(
        () => console.log(`üì® G·ª≠i email b√†i m·ªõi ƒë·∫øn ${user.email} th√†nh c√¥ng`),
        (err) => console.error(`‚ùå G·ª≠i email th·∫•t b·∫°i t·ªõi ${user.email}:`, err)
      );
  });
};
